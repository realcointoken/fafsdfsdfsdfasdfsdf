(function(w){w.plot.plugins.push({init:function(u){function y(h,k){var a;if("zero"===h.fillBelowTo){var m=jQuery.extend(!0,{},h);for(a=m.datapoints.pointsize-1;a<m.datapoints.points.length;a+=m.datapoints.pointsize)m.datapoints.points[a]=h.yaxis.min;return m}for(a=0;a<k.length;++a)if(k[a].id===h.fillBelowTo)return k[a];return null}u.hooks.drawSeries.push(function(h,k,a){function m(g,c){k.beginPath();k.moveTo(a.xaxis.p2c(g)+p.left,a.yaxis.p2c(c)+p.top)}function u(){if(c.length/f!==l.length/n)return console.error("Refusing to graph inconsistent number of points"),
!1;var g;for(g=0;g<c.length/f;g++)if(null!==c[g*f]&&null!==l[g*n]&&c[g*f]!==l[g*n])return console.error("Refusing to graph points without matching value"),!1;return!0}function s(g,v){console.assert(v>g,"expects the end index to be greater than the start index");var b=0===g||null===c[g-1]||null===l[g-1],d=!1,e;for(e=g;e<v;e++)if(null===c[e*f+1]||null===l[e*f+1])d=!1,b=!0;else if(c[e*f+1]===l[e*n+1])d=!0,b=!1;else if(c[e*f+1]>l[e*n+1]){b?m(c[e*f],c[e*f+1]):d?m(c[(e-1)*f],c[(e-1)*f+1]):(b=x(e),m(b[0],
b[1]));a:{b=v;console.assert(e<=b,"the start should be the rightmost point, and the end should be the leftmost (excluding the equal or intersecting point)");for(var h=d=void 0,d=e;d<b;d++)if(null===c[d*f+1]&&d>e){t(d-1,e);s(d,b);break a}else if(c[d*f+1]===l[d*n+1]){t(d,e);s(d,b);break a}else if(c[d*f+1]<l[d*n+1]){h=x(d);k.lineTo(a.xaxis.p2c(h[0])+p.left,a.yaxis.p2c(h[1])+p.top);t(d,e);s(d,b);break a}else k.lineTo(a.xaxis.p2c(c[d*f])+p.left,a.yaxis.p2c(c[d*f+1])+p.top);t(b,e)}break}else d=b=!1}function x(g){console.assert(0<
g,"expects the second point in the series line segment");var a,b;for(a=1;a<l.length/n;a++){b=c[(g-1)*f];var d=c[(g-1)*f+1],e=l[(a-1)*n],h=l[(a-1)*n+1],k=void 0,m=void 0,q=void 0,p=void 0,r=void 0,q=void 0,k=c[g*f]-b,m=c[g*f+1]-d,q=l[a*n]-e,p=l[a*n+1]-h,r=(-m*(b-e)+k*(d-h))/(-q*m+k*p),q=(q*(d-h)-p*(b-e))/(-q*m+k*p);b=0<=r&&1>=r&&0<=q&&1>=q?[b+q*k,d+q*m]:null;if(null!==b)return b}console.error("intersectionPoint() should only be called when an intersection happens")}function t(a,c){console.assert(a>=
c,"the start should be the rightmost point, and the end should be the leftmost (excluding the equal or intersecting point)");var b;for(b=a;b>=c;b--)k.lineTo(r.xaxis.p2c(l[b*n])+p.left,r.yaxis.p2c(l[b*n+1])+p.top);k.closePath();k.fill()}if(null!==a.fillBelowTo){var r,f,c,n,l,p;if(r=y(a,h.getData()))f=a.datapoints.pointsize,c=a.datapoints.points,n=r.datapoints.pointsize,l=r.datapoints.points,p=h.getPlotOffset(),u()&&(h=w.color.parse(a.color),h.a=.4,h.normalize(),k.fillStyle=h.toString(),s(0,c.length/
f))}})},options:{series:{fillBelowTo:null}},name:"fillbelow",version:"0.1.0"})})(jQuery);
